
# billentyűt lenyomom
# ha stunlock, akkor nem csinál semmit
# ha fut casttimer már, azt reseteli
# ha '2' volt a billentyű, akkor elindítja a casttimert
  # ha casttimer végigér, akkor stunlock indul el


# python program to explain the
# use of cancel() method in Timer class

import threading
import pythoncom, pyWinhook, sys, logging

thread_cast = None
thread_stun = None

def Finished_stun():
   global thread_stun
   print("- stunlock finished -")
   thread_stun = None

def Finished_casting():
   global thread_cast, thread_stun
   print("- casting finished -")
   thread_cast = None
   thread_stun = threading.Timer(interval = 3, function = Finished_stun)
   thread_stun.start()
   print("- stunlock starts -")

def OnKeyboardEvent(event):
   global thread_cast, thread_stun
   print("Key: ", chr(event.Ascii))
   if thread_stun is not None:
      print("- under stunlock -")
      #return False
   elif chr(event.Ascii) == '2' and thread_cast is None:
      print("- casting starts -")
      thread_cast = threading.Timer(interval = 3, function = Finished_casting)
      thread_cast.start()
   elif chr(event.Ascii) != '2' and thread_cast is not None:
      print("- casting canceled -")
      thread_cast.cancel()
      thread_cast = None
   return True
   # ha false return, akkor nem fogad inputot sehol, csak pythonban --> ctrl + alt + del + egérrel tudok kilépni akkor

hm = pyWinhook.HookManager()
hm.KeyDown = OnKeyboardEvent
hm.HookKeyboard()
pythoncom.PumpMessages()

